package cn.zorcc.common.network;

/**
 *   Handler represents the actual business logic that a channel should perform in its lifecycle
 */
public interface Handler {
    /**
     *   After channel got connected, this function would be invoked
     *   The definition of connected means the connector has been upgraded to protocol
     */
    void onConnected(Channel channel);

    /**
     *   After data has been received, this function would be invoked in reader thread, business logic should be put here
     *   Note that the data object was generated by channel's decoder, if decode() return null then this function won't be invoked
     *   If FrameworkException was thrown inside this function, the channel would be immediately shutdown to guard the application
     */
    int onRecv(Channel channel, Object data);

    /**
     *   Before channel was going to shut down, this function would be invoked
     *   Note that some goodbye message could be sent in this function to perform a graceful shutdown
     */
    void onShutdown(Channel channel);

    /**
     *   After connection was closed, this function would be invoked
     *   Note that you can't expect sending some data in this function, since the connection has already been closed
     *   If connection failed in connector phase, this function would not be triggered (if there's an onConnected(), there is an onRemoved(), vice versa)
     */
    void onRemoved(Channel channel);
}
